&lt;span&gt;sync :&amp;nbsp; ThinkWhatToSay&lt;br&gt;inputs :&lt;br&gt;outputs : &quot;text&quot;&lt;br&gt;tick:&lt;br&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; // the output may change at each tick(). Here we keep it simple.&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; setOutput(&quot;text&quot;, &quot;The answer is 42&quot; );&lt;/span&gt;&lt;br&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; return NodeStatus::SUCCESS;&lt;/span&gt;
&lt;div&gt;&lt;div&gt;&lt;div&gt;sync : SaySomething&lt;/div&gt;&lt;div&gt;inputs: &quot;message&quot;&lt;/div&gt;&lt;div&gt;outputs:&lt;/div&gt;&lt;div&gt;tick:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Optional&amp;lt;std::string&amp;gt; msg = getInput&amp;lt;std::string&amp;gt;(&quot;message&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // Check if optional is valid. If not, throw its error&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!msg)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw BT::RuntimeError(&quot;missing required input [message]: &quot;,&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;msg.error() );&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // use the method value() to extract the valid message.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; std::cout &amp;lt;&amp;lt; &quot;Robot says: &quot; &amp;lt;&amp;lt; msg.value() &amp;lt;&amp;lt; std::endl;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return NodeStatus::SUCCESS;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;div&gt;&lt;div&gt;sync : SaySomethingSimple&lt;/div&gt;&lt;div&gt;inputs:&lt;/div&gt;&lt;div&gt;outputs:&lt;/div&gt;&lt;div&gt;tick:&lt;/div&gt;&lt;div&gt;&amp;nbsp; Optional&amp;lt;std::string&amp;gt; msg = self.getInput&amp;lt;std::string&amp;gt;(&quot;message&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; // Check if optional is valid. If not, throw its error&lt;/div&gt;&lt;div&gt;&amp;nbsp; if (!msg)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; throw BT::RuntimeError(&quot;missing required input [message]: &quot;, msg.error());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; // use the method value() to extract the valid message.&lt;/div&gt;&lt;div&gt;&amp;nbsp; std::cout &amp;lt;&amp;lt; &quot;Robot says: &quot; &amp;lt;&amp;lt; msg.value() &amp;lt;&amp;lt; std::endl;&lt;/div&gt;&lt;div&gt;&amp;nbsp; return NodeStatus::SUCCESS;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;

